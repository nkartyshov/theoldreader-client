apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.fabric'

android {
    signingConfigs {
        config {
            Properties properties = new Properties()
            properties.load(project.rootProject.file('local.properties').newDataInputStream())

            if (properties.getProperty("store.path") != null) {
                storeFile file(properties.getProperty("store.path"))
                storePassword properties.getProperty("store.password")
                keyAlias properties.getProperty("key.alias")
                keyPassword properties.getProperty("key.password")
            }
        }
    }

    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "ru.oldowl"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 10
        versionName "1.0.1a"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        def sendFeedbackUrl = '"https://github.com/nkartyshov/theoldreader-client/issues"'

        debug {
            buildConfigField "String", "SEND_FEEDBACK_URL", sendFeedbackUrl

            debuggable true
            minifyEnabled false
        }

        release {
            buildConfigField "String", "SEND_FEEDBACK_URL", sendFeedbackUrl

            debuggable false
            minifyEnabled false
            signingConfig signingConfigs.config

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    androidExtensions {
        experimental = true
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def applicationId = variant.applicationId
            def flavor = variant.name
            def version = variant.versionName

            output.outputFileName = "${applicationId}-${version}-${flavor}.apk"
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.41'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.2.2'

    def lifecycle_version = "2.2.0-alpha03"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    //noinspection LifecycleAnnotationProcessorWithJava8
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.browser:browser:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    implementation 'androidx.core:core-ktx:1.0.2'
    implementation "androidx.fragment:fragment-ktx:1.2.0-alpha02"

    def room_version = "2.1.0"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'com.google.android.material:material:1.0.0'

    implementation 'androidx.browser:browser:1.0.0'
    implementation 'androidx.preference:preference:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    def koin_version = '1.0.2'
    implementation "org.koin:koin-core:$koin_version"
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-android-viewmodel:$koin_version"

    def okhttp_version = '3.12.1'
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"

    def rome_version = '1.12.0'
    implementation "com.rometools:rome:$rome_version"
    implementation "com.rometools:rome-opml:$rome_version"

    def retrofit_version = '2.5.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"

    implementation 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'
    implementation 'com.squareup.moshi:moshi-kotlin:1.8.0'

    implementation 'com.google.firebase:firebase-core:17.1.0'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
    implementation 'com.thoughtbot:expandablerecyclerview:1.3'
    implementation 'com.jakewharton.timber:timber:4.7.1'

    testImplementation 'junit:junit:4.12'

    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.annotation:annotation:1.1.0'
    androidTestImplementation 'androidx.room:room-testing:2.1.0'
}
